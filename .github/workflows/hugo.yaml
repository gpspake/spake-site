# .github/workflows/deploy.yml
name: Deploy Hugo site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.2
      HUGO_ENVIRONMENT: production
      TZ: America/Los_Angeles

    steps:
      # 1️⃣  Checkout code
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 1️⃣  Install the pnpm CLI first
      - uses: pnpm/action-setup@v4          # installs pnpm
        with:
          version: 9                        # or "latest"
          # optional: run the install for you
          run_install: |
            - args: [--frozen-lockfile, --strict-peer-dependencies]

      # 2️⃣  Now that pnpm exists, Node can enable pnpm-store caching
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'                     # works because pnpm is on PATH


      # 4️⃣  Make local CLIs (tailwindcss) visible to Hugo
      - run: echo "${{ github.workspace }}/node_modules/.bin" >> "$GITHUB_PATH"

      # 5️⃣  Install Hugo CLI (extended build)
      - run: |
          wget -O ${{ runner.temp }}/hugo.deb \
            https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # 6️⃣  (Optional) Install Dart Sass if the theme needs it
      - run: sudo snap install dart-sass

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # 7️⃣  Build the site
      - run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"

      - name: Show generated CSS files
        run: ls -R public/css || true

      # 8️⃣  Upload the built site
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
